{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/ItemCard.js","components/ItemsList.js","pages/CollectionPage.js","components/CollectionCard.js","components/CollectionsList.js","pages/MainPage.js","pages/UsersListPage.js","pages/UserPage.js","hooks/message.hook.js","pages/CreateCollectionPage.js","pages/AuthPage.js","pages/CreateItemPage.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","className","ItemCard","item","src","name","description","ItemsList","items","length","map","CollectionPage","useContext","setItems","collectionId","useParams","id","getItems","Authorization","fetched","useEffect","to","CollectionCard","collection","type","CollectionsList","collections","MainPage","setCollections","getCollections","UsersListPage","UserPage","useMessage","text","window","M","toast","html","CreateCollectionPage","history","useHistory","auth","setCollection","changeHandler","event","target","value","updateTextFields","createHandler","push","_id","onChange","disabled","htmlFor","onClick","AuthPage","email","password","form","setForm","registerHandler","loginHandler","placeholder","style","marginRight","CreateItemPage","col","setItem","Navbar","props","href","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ab0949e3.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    \n    const request = useCallback(async (url, method='GET', body = null, headers = {}) => {\n        setLoading(true)\n        try {\n            if(body) {\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n\n            const response = await fetch(url, {method, body, headers})\n            const data = await response.json()\n\n            if(!response.ok) {\n                throw new Error(data.message || 'Something wrong')\n            }\n            setLoading(false)\n            return data\n\n        } catch (e) {\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    }, [])\n    const clearError = useCallback(() => setError(null), [])\n    return { loading, error, request, clearError }\n}","import {createContext} from 'react'\n\nfunction noop() {}\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: noop,\n    logout: noop,\n    isAuthenticated: false\n})","import React from 'react'\n\nexport const Loader = () => {\n   return (\n    <div className=\"preloader-wrapper active\">\n        <div className=\"spinner-layer spinner-red-only\">\n        <div className=\"circle-clipper left\">\n            <div className=\"circle\"/>\n        </div><div className=\"gap-patch\">\n            <div className=\"circle\"/>\n        </div><div className=\"circle-clipper right\">\n            <div className=\"circle\"/>\n        </div>\n        </div>\n    </div>\n\n   ) \n}","import React from 'react'\n\nexport const ItemCard = ({item}) => {\n    return ( \n        <div className=\"col s6 m4 l3\">\n        <div className=\"card\">\n            <div className=\"card-image\">\n                <img src=\"https://materializecss.com/images/sample-1.jpg\"/>\n                <span className=\"card-title\">{item.name}</span>\n            </div>\n            <div className=\"card-content\">\n                <p>{item.description}</p>\n            </div>\n        </div>     \n        </div>\n    )\n}","import React from 'react'\nimport { ItemCard } from './ItemCard'\n\n\nexport const ItemsList = ({ items }) => {\n  if (!items.length) {\n    return <p className=\"center\">There is no items</p>\n  }\n\n  return (\n      <div className=\"row\">\n      { items.map((item) => {\n        return (\n          <ItemCard item={item}/>\n        )\n      }) }\n    </div>\n  )\n}","import React, { useState, useCallback, useContext, useEffect } from 'react'\nimport {useParams, Link} from 'react-router-dom'\nimport { useHttp } from '../hooks/http.hook'\nimport { AuthContext } from '../context/AuthContext'\nimport { Loader } from '../components/Loader'\nimport { ItemsList } from '../components/ItemsList'\n\nexport const CollectionPage = () => {\n    const {token} = useContext(AuthContext)\n    const {request, loading} = useHttp()\n    const [items, setItems] = useState(null)\n    const collectionId = useParams().id\n    \n    const getItems = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/item/${collectionId}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setItems(fetched)\n        } catch (e) {}\n    }, [token, collectionId, request])\n\n    useEffect(() => {\n        getItems()\n    }, [getItems])\n\n    if(loading) {\n        return <Loader/>\n    }\n\n    return (\n        <div>\n            {!loading && items && <ItemsList items={items}/>}\n            <div>\n                <Link to={`/create_item/${collectionId}`}>ADD ITEM</Link>\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport const CollectionCard = ({collection}) => { \n    return (\n        <div>\n            <div className=\"card blue-grey darken-1\">\n                <div className=\"card-content white-text\">\n                    <span className=\"card-title\">{collection.name}</span>\n                    <p>{collection.type}</p>\n                </div>\n            </div>           \n        </div>\n          \n    )\n}","import React from 'react'\nimport { CollectionCard } from './CollectionCard'\n\n\nexport const CollectionsList = ({ collections }) => {\n  if (!collections.length) {\n    return <p className=\"center\">There is no collections</p>\n  }\n  return (\n      <div className=\"row\">     \n      { collections.map((collection) => {\n        return (\n          <CollectionCard collection={collection}/>\n        )\n      }) \n      }\n      </div>\n  )\n}","import React, { useState, useCallback, useContext, useEffect } from 'react'\nimport { useHttp } from '../hooks/http.hook'\nimport { Loader } from '../components/Loader'\nimport { CollectionsList } from '../components/CollectionsList'\n\nexport const MainPage = () => {\n    const {request, loading} = useHttp()\n    const [collections, setCollections] = useState([])\n    const getCollections = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/collection/all`, 'GET', null)\n            setCollections(fetched)\n        } catch (e) {}\n    }, [request])\n\n    useEffect(() => {\n        getCollections()\n    }, [getCollections])\n\n    if(loading) {\n        return <Loader/>\n    }\n\n    return (\n        <div>\n            {!loading && <CollectionsList collections={collections}/>}\n        </div>\n    )\n}","import React from 'react'\n\nexport const UsersListPage = () => {\n    return (\n        <div>\n            <h1>Users List Page</h1>\n        </div>\n    )\n}","import React, { useState, useCallback, useContext, useEffect } from 'react'\nimport { useHttp } from '../hooks/http.hook'\nimport { AuthContext } from '../context/AuthContext'\nimport { Loader } from '../components/Loader'\n\nimport { CollectionsList } from '../components/CollectionsList'\n\nexport const UserPage = () => {\n    const {token} = useContext(AuthContext)\n    const {request, loading} = useHttp()\n    const [collections, setCollections] = useState([])\n    const getCollections = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/collection`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setCollections(fetched)\n        } catch (e) {}\n    }, [token, request])\n\n    useEffect(() => {\n        getCollections()\n    }, [getCollections])\n\n    if(loading) {\n        return <Loader/>\n    }\n\n    return (\n        <div>\n            {!loading && <CollectionsList collections={collections}/>}\n        </div>\n    )\n}","import {useCallback} from 'react'\n\nexport const useMessage = () => {\n    return useCallback(text => {\n        if(window.M && text) {\n            window.M.toast({html: text})\n        }\n    }, [])\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHistory } from 'react-router-dom'\n\nexport const CreateCollectionPage = () => {\n    const history = useHistory()\n    const auth = useContext(AuthContext)\n    const {request} = useHttp()\n    const [collection, setCollection] = useState({\n        type: '', name: ''\n    })\n    const message = useMessage()\n\n    const changeHandler = event => {\n        setCollection({...collection, [event.target.name]: event.target.value})\n    }\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n\n    const createHandler = async () => {\n        try {\n            const data = await request('/api/collection/create', 'POST', {...collection}, {\n                Authorization: `Bearer ${auth.token}`\n            })\n            if (data) {\n                message('Collection created')\n            }\n            history.push(`/collection/${data.collection._id}`)\n        } catch (e) {\n            \n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">    \n                <div className=\"input-field\">\n                    <select className=\"browser-default\" id=\"type\" name=\"type\" value={collection.type} onChange={changeHandler} >\n                        <option disabled value=''>Choose Collection</option>\n                        <option value='Books'>Books</option>\n                        <option value='Coins'>Coins</option>\n                        <option value='Other'>Smth else</option>\n                    </select>\n                    <label className=\"active\" htmlFor=\"type\">Type</label>\n                </div>\n                <div className=\"input-field\">\n                    <input name=\"name\" id=\"name\" type=\"text\" className=\"validate\" value={collection.name} onChange={changeHandler}/>\n                    <label className=\"active\" htmlFor=\"name\">Name</label>\n                </div>\n                <div>\n                    <button onClick={createHandler} className=\"waves-effect waves-light btn\">Create Collection</button>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useContext, useEffect, useState} from 'react'\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\nimport {AuthContext} from '../context/AuthContext'\n\nexport const AuthPage = () => {\n  const auth = useContext(AuthContext)\n  const message = useMessage()\n  const {loading, request, error, clearError} = useHttp()\n  const [form, setForm] = useState({\n    email: '', password: ''\n  })\n\n  useEffect(() => {\n    message(error)\n    clearError()\n  }, [error, message, clearError])\n\n  useEffect(() => {\n    window.M.updateTextFields()\n  }, [])\n\n  const changeHandler = event => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('/api/auth/register', 'POST', {...form})\n      message(data.message)\n    } catch (e) {}\n  }\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', {...form})\n      auth.login(data.token, data.userId)\n    } catch (e) {}\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s6 offset-s3\">\n        <h1>collectION</h1>\n        <div className=\"card blue darken-1\">\n          <div className=\"card-content white-text\">\n            <span className=\"card-title\">Авторизация</span>\n            <div>\n\n              <div className=\"input-field\">\n                <input\n                  placeholder=\"Введите email\"\n                  id=\"email\"\n                  type=\"text\"\n                  name=\"email\"\n                  className=\"yellow-input\"\n                  value={form.email}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"email\">Email</label>\n              </div>\n\n              <div className=\"input-field\">\n                <input\n                  placeholder=\"Введите пароль\"\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"yellow-input\"\n                  value={form.password}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"email\">Пароль</label>\n              </div>\n\n            </div>\n          </div>\n          <div className=\"card-action\">\n            <button\n              className=\"btn yellow darken-4\"\n              style={{marginRight: 10}}\n              disabled={loading}\n              onClick={loginHandler}\n            >\n              Войти\n            </button>\n            <button\n              className=\"btn grey lighten-1 black-text\"\n              onClick={registerHandler}\n              disabled={loading}\n            >\n              Регистрация\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHistory, useParams } from 'react-router-dom'\n\nexport const CreateItemPage = () => {\n    //const history = useHistory()\n    const auth = useContext(AuthContext)\n    const collectionId = useParams().id\n    const {request} = useHttp()\n    const [item, setItem] = useState({\n        name: '', col: collectionId, description: ''\n    })\n    const message = useMessage()\n\n    const changeHandler = event => {\n        setItem({...item, [event.target.name]: event.target.value})\n    }\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n\n    const createHandler = async () => {\n        try {\n            const data = await request('/api/item/create', 'POST', {...item}, {\n                Authorization: `Bearer ${auth.token}`\n            })\n            if (data) {\n                message('Item added')\n            }\n        } catch (e) {\n            \n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">    \n                <div className=\"input-field\">\n                    <input name=\"name\" id=\"name\" type=\"text\" className=\"validate\" value={item.name} onChange={changeHandler}/>\n                    <label className=\"active\" htmlFor=\"name\">Name</label>\n                </div>\n                <div className=\"input-field\">\n                    <input name=\"description\" id=\"description\" type=\"text\" className=\"validate\" value={item.description} onChange={changeHandler}/>\n                    <label className=\"active\" htmlFor=\"description\">Description</label>\n                </div>\n                <div>\n                    <button onClick={createHandler} className=\"waves-effect waves-light btn\">Create Item</button>\n                </div>\n                \n            </div>\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport {NavLink, useHistory} from 'react-router-dom'\nimport { AuthContext } from '../context/AuthContext'\n\nexport const Navbar = props => {\n    const auth = useContext(AuthContext)\n    const history = useHistory()\n    const logoutHandler = event => {\n        event.preventDefault()\n        auth.logout()\n        history.push('/')\n    }\n    if(props.value) {\n        return (\n            <div className=\"container\">\n            <nav>\n                <div className=\"nav-wrapper\">\n                \n                <NavLink to=\"/\" className=\"brand-logo\">collectION</NavLink>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li><NavLink to=\"/user\">My Profile</NavLink></li>\n                    <li><NavLink to=\"/create_collection\">Create New Collection</NavLink></li>\n                    <li><a href=\"/\" onClick={logoutHandler}>Log out</a></li>\n                </ul>\n                </div>\n            </nav>\n            </div>\n        )\n    }\n    return (\n        <div className=\"container\">\n        <nav>\n            <div className=\"nav-wrapper\">\n            <NavLink to=\"/\" className=\"brand-logo\">collectION</NavLink>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                <li><NavLink to=\"/auth\">Log in</NavLink></li>\n            </ul>\n            </div>\n        </nav>\n        </div>\n    )\n}","import React, { useEffect } from 'react'\nimport 'materialize-css'\n\nimport { useRoutes } from './routes'\nimport {BrowserRouter as Router } from 'react-router-dom'\nimport { useAuth } from './hooks/auth.hook'\nimport { AuthContext } from './context/AuthContext'\nimport { Navbar } from './components/Navbar'\nimport { Loader } from './components/Loader'\n\n\nfunction App() {\n  const {login, logout, token, userId, ready} = useAuth()\n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated) \n\n  if(!ready) {\n    return <Loader/>\n  }\n\n  return (\n    <AuthContext.Provider value={{\n      token, login, logout, userId, isAuthenticated\n    }}>\n      <Router>\n        {<Navbar value = {isAuthenticated}/>}\n        <div className=\"container\">\n          {routes}\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App\n","import {useState, useCallback, useEffect} from 'react'\n\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n    \n    const [token, setToken] = useState(null)\n    const [ready, setReady] = useState(false)\n    const [userId, setUserId] = useState(null)\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken)\n        setUserId(id)\n\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: id, token: jwtToken\n        }))\n    }, [])\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName))\n\n        if(data && data.token) {\n            login(data.token, data.userId)\n        }\n        setReady(true)\n    }, [login])\n\n    return {login, logout, token, userId, ready}\n}","import React from 'react'\nimport { Switch, Redirect, Route, Link } from 'react-router-dom'\nimport { CollectionPage } from './pages/CollectionPage'\nimport { MainPage } from './pages/MainPage'\nimport { UsersListPage } from './pages/UsersListPage'\nimport { UserPage } from './pages/UserPage'\nimport { CreateCollectionPage } from './pages/CreateCollectionPage'\nimport { AuthPage } from './pages/AuthPage'\nimport { CreateItemPage } from './pages/CreateItemPage'\n\n\nexport const useRoutes = isAuthenticated => {\n    if(isAuthenticated) {\n        return (\n            <Switch>\n                <Route path=\"/\" exact>\n                    <MainPage/>\n                </Route>\n                <Route path=\"/user\" exact>\n                    <UserPage/>\n                </Route>\n                <Route path=\"/create_collection\" exact>\n                    <CreateCollectionPage/>\n                </Route>\n                <Route path=\"/create_item/:id\">\n                    <CreateItemPage/>\n                </Route>\n                <Route path=\"/users\" exact>\n                    <UsersListPage/>\n                </Route>\n                <Route path=\"/collection/:id\">\n                    <CollectionPage/>\n                </Route>\n                <Redirect to=\"/\"/>\n            </Switch>\n          \n        )\n    }\n    return (\n        \n            <Switch>\n                <Route path=\"/auth\">\n                    <AuthPage/>\n                </Route>\n                <Route path=\"/\">\n                    <MainPage/>\n                </Route>\n                <Redirect to=\"/auth\"/>\n            </Switch>\n        \n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}